{
	"name": "Notebook Delta Lake Change Data Feed",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "ws1sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d81ecbfd-8d3d-4e02-b1af-ed4510861f10"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/4e9c0cc1-30e2-4c13-9e99-416611832cdb/resourceGroups/rg_synapselink/providers/Microsoft.Synapse/workspaces/fedio4jbnhx6syzepocws1/bigDataPools/ws1sparkpool1",
				"name": "ws1sparkpool1",
				"type": "Spark",
				"endpoint": "https://fedio4jbnhx6syzepocws1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ws1sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 5,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Change Data Feed for Delta Lake\r\n",
					"https://docs.delta.io/2.0.0/delta-change-data-feed.html\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TABLE student (id INT, name STRING, age INT) TBLPROPERTIES (delta.enableChangeDataFeed = true)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"INSERT INTO student VALUES ( 1, 'Bob', 42 )"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT *\r\n",
					"FROM student"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# version as ints or longs\r\n",
					"df1 = spark.read.format(\"delta\") \\\r\n",
					"  .option(\"readChangeFeed\", \"true\") \\\r\n",
					"  .option(\"startingVersion\", 0) \\\r\n",
					"  .option(\"endingVersion\", 10) \\\r\n",
					"  .table(\"student\")\r\n",
					"\r\n",
					"df1.show()\r\n",
					"\r\n",
					"# timestamps as formatted timestamp\r\n",
					"spark.read.format(\"delta\") \\\r\n",
					"  .option(\"readChangeFeed\", \"true\") \\\r\n",
					"  .option(\"startingTimestamp\", '2021-04-21 05:45:46') \\\r\n",
					"  .option(\"endingTimestamp\", '2021-05-21 12:00:00') \\\r\n",
					"  .table(\"student\")\r\n",
					"\r\n",
					"# providing only the startingVersion/timestamp\r\n",
					"spark.read.format(\"delta\") \\\r\n",
					"  .option(\"readChangeFeed\", \"true\") \\\r\n",
					"  .option(\"startingVersion\", 0) \\\r\n",
					"  .table(\"student\")\r\n",
					"\r\n",
					"\r\n",
					"# path based tables\r\n",
					"#spark.read.format(\"delta\") \\\r\n",
					"#  .option(\"readChangeFeed\", \"true\") \\\r\n",
					"#  .option(\"startingTimestamp\", '2021-04-21 05:45:46') \\\r\n",
					"#  .load(\"pathToMyDeltaTable\")"
				],
				"execution_count": null
			}
		]
	}
}